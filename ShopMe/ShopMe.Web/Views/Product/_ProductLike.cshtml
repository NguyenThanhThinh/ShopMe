@using ShopMe.Domains.Extensions
@model IEnumerable<ShopMe.Domains.ProductViewModel>
@{ #line 3 "C:\Users\httthao\Desktop\Ecommerce\ShopMe\ShopMe.Web\Views\Product\_ProductLike.cshtml"
                /**/

                var model = Model;

}
<div class="owl_carousel six_items">



    @foreach (var item in model)
    {
        var url = "/" + item.Alias + ".sp-" + item.ProductID + ".html";
        var Name = ExtensionMethods.Truncate(item.Name, 15, true);
        <div class="product_item">

            <!-- - - - - - - - - - - - - - Thumbnail - - - - - - - - - - - - - - - - -->

            <div class="image_wrap">

                <img src="@item.Image" class="img-responsive" alt="">
                <!-- - - - - - - - - - - - - - Product actions - - - - - - - - - - - - - - - - -->
                <div class="actions_wrap">

                    <div class="centered_buttons">

                        <a href="@url" class="button_dark_grey quick_view">Xem</a>

                        <a href="#" class="button_blue add_to_cart btnAddCart" data-id="@item.ProductID">Mua hàng</a>
                    </div><!--/ .centered_buttons -->
                </div>

            </div><!--/. image_wrap-->

            <div class="description align_center">

                <p><a href="@url">@Name</a></p>

                <div class="clearfix product_info">

                    <!-- - - - - - - - - - - - - - Product rating - - - - - - - - - - - - - - - - -->
                    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
                    <ul class="rating alignright">
                        @if (item.ProductRating > 0 && item.ProductRating != 0)
                        {

                            double Mark = (double)item.ProductRating;//2.7
                            double SoTron = Mark - Mark % 1; //2
                            double SoDu = 5 - SoTron; //3
                            double SoDu_SaoRong = Math.Round(SoDu);//3
                            if (Mark % 1 >= 0.5)
                            {
                                SoDu_SaoRong = SoDu_SaoRong - 1;
                            }
                            double SoDu_NuaSao = SoDu - Math.Round(SoDu_SaoRong);
                            if (Mark > 0)
                            {
                                for (int f = 1; f <= SoTron; f++)
                                {
                                    <i class="fa fa-star"></i>
                                }
                                for (int f = 1; f <= SoDu_NuaSao; f++)
                                {
                                    <i class="fa fa-star-half-o"></i>
                                }
                                for (int f = 1; f <= SoDu_SaoRong; f++)
                                {
                                    <i class="fa fa-star-o"></i>
                                }
                                <p class="likes" style="margin-left:3px;">@item.ViewRating (đánh giá)</p>
                            }

                        }
                        else
                        {
                            <p class="review" style="text-align:left;">Chưa có nhận xét</p>
                        }

                    </ul>

                    <p class="product_price alignleft">

                        <b>@item.Price.ToString("N0")</b>
                    </p>

                </div><!--/ .clearfix.product_info-->




            </div>





        </div>
    }


</div>